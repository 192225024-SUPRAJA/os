#include <stdio.h>
#include <stdbool.h>
#define NUM_PROCESSES 4
#define NUM_RESOURCES 3
int claim[NUM_PROCESSES][NUM_RESOURCES] = {
    {3, 2, 2},
    {6, 1, 3},
    {3, 1, 4},
    {4, 2, 2}
};
int allocation[NUM_PROCESSES][NUM_RESOURCES] = {
    {1, 0, 0},
    {6, 1, 2},
    {2, 1, 1},
    {0, 0, 2}
};
int available[NUM_RESOURCES] = {9, 3, 6};
int main() {
    int work[NUM_RESOURCES];
    bool finish[NUM_PROCESSES] = {false};
    int i,j;
    for (i = 0; i < NUM_RESOURCES; i++) {
        work[i] = available[i];
    }
    for (i = 0; i < NUM_PROCESSES; i++) {
        if (!finish[i]) {
            bool can_finish = true;
            for (j = 0; j < NUM_RESOURCES; j++) {
                if (claim[i][j] - allocation[i][j] > work[j]) {
                    can_finish = false;
                    break;
                }
            }
            if (can_finish) {
                for (j = 0; j < NUM_RESOURCES; j++) {
                    work[j] += allocation[i][j];
                }
                finish[i] = true;
                i = -1; 
            }
        }
    }
    bool safe = true;
    for (i = 0; i < NUM_PROCESSES; i++) {
        if (!finish[i]) {
            safe = false;
            break;
        }
    }

    if (safe) {
        printf("The system is in a safe state.\n");
    } else {
        printf("The system is in an unsafe state.\n");
    }

    return 0;
}
